name: Docker Build & Publish
env:
    IMAGENAME: nextcloud
    SERVICENAME: Nextcloud_nextcloud

on:
  push:
    branches:
      - main

jobs:

  release:

    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v2
      -
        name: Extract Base Image Version
        id: extract_version
        run: |
          # Assuming the base image is the first FROM line in Dockerfile
          base=$(grep '^FROM' Dockerfile | head -n 1)
          # Extracting the version number
          version=$(echo $base | awk '{print $2}' | awk -F':' '{print $2}')
          if [ -z "$version" ]; then
            echo "Error: Version number could not be extracted."
            exit 1
          fi
          echo "Base image version: $version"
          echo "version=$version" >> $GITHUB_ENV
      -
        name: Setup buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to private Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64,linux/arm64
          file: ./Dockerfile
          push: true
          tags: |
            robinmoser/${{ env.IMAGENAME }}:pipeline-${{ github.run_number }}
            robinmoser/${{ env.IMAGENAME }}:${{ env.version }}
            robinmoser/${{ env.IMAGENAME }}:latest
            ${{ secrets.REGISTRY_URL }}/${{ env.IMAGENAME }}:pipeline-${{ github.run_number }}
            ${{ secrets.REGISTRY_URL }}/${{ env.IMAGENAME }}:${{ env.version }}
            ${{ secrets.REGISTRY_URL }}/${{ env.IMAGENAME }}:latest

  update:
    runs-on: ubuntu-latest
    needs: release
    steps:
      -
        name: Update Service
        run: >
            curl --silent --show-error --fail -X PUT
            -u ${{ secrets.SWARM_DEPLOYMENT_USER }}:${{ secrets.SWARM_DEPLOYMENT_PASSWORD }}
            ${{ secrets.SWARM_DEPLOYMENT_URL }}/service?name=${{ env.SERVICENAME }}
